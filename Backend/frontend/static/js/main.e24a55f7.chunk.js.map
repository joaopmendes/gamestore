{"version":3,"sources":["assets/images/banner.jpg","Store/authSlice.ts","Store/loadersSlice.ts","Store/controlsSlice.ts","Store/productSlice.ts","Store/categoriesSlice.ts","create-store.config.tsx","global.styles.ts","Components/MainLayout/MainComponentSC.ts","Components/Navbar/Navbar.tsx","Components/Footer/FooterSC.ts","Components/Footer/Footer.tsx","Components/MainLayout/MainLayout.tsx","Components/Hero/HeroSC.ts","Components/Hero/Hero.tsx","Pages/Home/index.tsx","Services/UserService/index.ts","Pages/Register/Register.tsx","Pages/Login/Login.tsx","routes/normal.routes.tsx","Backoffice/Components/sideNavigation.js","Backoffice/Components/Layout/Layout.jsx","Backoffice/Pages/Dashboard/Dashboard.tsx","Services/CategoryService/index.ts","Backoffice/Pages/Categories/Components/CategoryList.tsx","Backoffice/Pages/Categories/Components/CategoryCreateEdit.tsx","Backoffice/Pages/Categories/Categories.tsx","Services/ProductService/index.ts","Backoffice/Pages/Products/Components/ProductList.tsx","Backoffice/Components/SelectField.tsx","Backoffice/Pages/Products/Components/ProductCreateEdit.tsx","Backoffice/Pages/Products/Products.tsx","routes/admin.routes.tsx","create-router.config.jsx","create-theme.style.jsx","Components/FullPageLoader/FullPageLoader.tsx","create-app-initializator.config.tsx","index.jsx"],"names":["module","exports","initialState","user","addresses","admin","cart","_id","items","totalPrice","email","name","orders","token","userLoggedIn","authSlice","createSlice","reducers","login","state","action","payload","localStorage","setItem","logout","removeItem","isUserLoggedIn","auth","getCurrentUser","getUserToken","loadersSlice","addLoader","find","load","push","removeLoader","filter","isAnyloaderActive","loaders","length","controlsSlice","productSlice","products","productModalOpen","open","editMode","editProduct","categories","price","console","productImage","setProductsTo","setProductModalTo","categoriesSlice","categoryModalOpen","editCategory","setCategoriesTo","setCategoryModalTo","store","configureStore","reducer","controls","middleware","logger","useAppDispatch","useDispatch","ReduxStore","children","Container","styled","div","DefaultForm","DefaultFormHeaderOffset","DefaultFormTitle","h1","Spacer","height","HeadingTitle","OuterBackground","InnerBackground","Navbar","dispatch","addToast","useToasts","useState","setOpen","currentUser","useSelector","isUserLogged","style","background","dark","expand","href","onClick","isOpen","navbar","right","nav","caret","className","to","appearance","actions","FooterContainer","footerFixedBottom","Footer","target","MainLayout","width","HeroContainer","HeroImage","img","HeroText","props","theme","primary","Hero","backgroundImage","src","alt","Home","banner","UserService","getUserInfo","a","customHeaders","authorization","axios","get","headers","response","hasError","data","errorMessage","values","post","register","validationSchema","yup","shape","label","required","password1","password2","test","value","this","parent","Register","history","useHistory","md","icon","initialValues","onSubmit","setSubmitting","render","field","meta","touched","error","group","type","success","color","outline","password","Login","OnlyNotLoginRoute","Component","rest","NormalRoutes","path","exact","Brand","SideNavigation","zIndex","activeClassName","AdminLayout","marginLeft","paddingTop","Dashboard","CategoryService","getCategories","createUpdateCategory","servicePayload","id","removeCategories","ids","CategoryList","React","columns","attributes","rows","datatable","setDatatable","useEffect","map","cat","options","key","removeCategoryResponse","categoriesResult","hover","entriesOptions","entries","pagesAmount","fullPagination","CategoryCreateEdit","resetModal","toggle","inline","noClickableBodyWithoutBackdrop","overflowScroll","Categories","ProductService","getListOfProducts","createUpdateProduct","formData","FormData","append","JSON","stringify","removeProducts","ProductList","prod","removeProdResponse","SelectField","form","htmlFor","isMulti","onChange","option","setFieldValue","onBlur","setFieldTouched","errors","ProductCreateEdit","categoriesOptions","oneOf","min","log","reduce","acc","curr","productResult","component","margin","aria-describedby","e","files","Products","AdminRoute","AdminRoutes","Routes","RouterConfig","secundary","StyledTheme","FullPageOverLoad","FullPageLoader","isLoading","AppInitializator","userToken","interceptors","request","use","config","Promise","reject","getItem","jwtDecode","exp","Date","now","handleError","App","placement","autoDismiss","autoDismissTimeout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e24a55f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.8e6374ad.jpg\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from '../Interfaces';\r\nimport { RootState } from '../create-store.config';\r\n\r\ninterface IInitialState {\r\n  userLoggedIn: boolean;\r\n  user: User;\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n  user: {\r\n    addresses: [],\r\n    admin: false,\r\n    cart: {\r\n      _id: '',\r\n      items: [],\r\n      totalPrice: 0,\r\n    },\r\n    email: '',\r\n    name: '',\r\n    orders: [],\r\n    token: '',\r\n  },\r\n  userLoggedIn: false,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login: (state, action: PayloadAction<User>) => {\r\n      state.userLoggedIn = true;\r\n      state.user = action.payload;\r\n      localStorage.setItem('token', action.payload.token);\r\n      return state;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state = initialState;\r\n      localStorage.removeItem('token');\r\n      return state;\r\n    }\r\n  },\r\n});\r\n\r\nexport const isUserLoggedIn = (state: RootState) => state.auth.userLoggedIn;\r\nexport const isUserAdmin = (state: RootState) => state.auth.user.admin;\r\nexport const getCurrentUser = (state: RootState) => state.auth.user;\r\nexport const getUserToken = (state: RootState) => state.auth.user.token;\r\nexport const getUserAddresses = (state: RootState) => state.auth.user.addresses;\r\nexport const getUserOrders = (state: RootState) => state.auth.user.orders;\r\nexport const getUserEmail = (state: RootState) => state.auth.user.email;\r\nexport const getUserName = (state: RootState) => state.auth.user.name;\r\nexport const getUserCart = (state: RootState) => state.auth.user.cart;\r\nexport const getUserCartItemsCount = (state: RootState) => {\r\n  const cart = state.auth.user.cart;\r\n  let quantity = 0;\r\n  for (const cartObject of cart.items) {\r\n    quantity += cartObject.quantity;\r\n  }\r\n  return quantity;\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../create-store.config';\r\n\r\n\r\n\r\nconst initialState: string[] = [];\r\nexport const loadersSlice = createSlice({\r\n  name: 'loaders',\r\n  initialState,\r\n  reducers: {\r\n    addLoader: (state, action: PayloadAction<string>) => {\r\n      const loader = state.find(load => load === action.payload);\r\n      if(!loader) {\r\n        state.push(action.payload);\r\n      }\r\n      return state;\r\n    },\r\n    removeLoader: (state, action: PayloadAction<string>) => {\r\n      return state.filter(load => load !== action.payload);\r\n    }\r\n  },\r\n});\r\n\r\nexport const isAnyloaderActive = ((state: RootState) => state.loaders.length > 0);\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../create-store.config';\r\n\r\n\r\ninterface IInitialState {\r\n}\r\nconst initialState: IInitialState = {\r\n};\r\nexport const controlsSlice = createSlice({\r\n  name: 'controls',\r\n  initialState,\r\n  reducers: {\r\n  },\r\n});\r\n\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Product } from '../Interfaces';\r\n\r\n\r\ninterface ProductModal {\r\n  open: boolean;\r\n  editMode: boolean;\r\n  editProduct: Product;\r\n}\r\ninterface IInitialState {\r\n  products: Product[];\r\n  productModalOpen: ProductModal\r\n}\r\nconst initialState: IInitialState = {\r\n  products: [],\r\n  productModalOpen: {\r\n    open: false,\r\n    editMode: false,\r\n    editProduct: {\r\n      _id: '',\r\n      name: '',\r\n      categories: [],\r\n      price: 0,\r\n      console: '',\r\n      productImage: '',\r\n    }\r\n  }\r\n};\r\nexport const productSlice = createSlice({\r\n  name: 'product',\r\n  initialState,\r\n  reducers: {\r\n    setProductsTo: (state, action: PayloadAction<Product[]>) => {\r\n      state.products= action.payload;\r\n      return state;\r\n    },\r\n    setProductModalTo:  (state, action: PayloadAction<ProductModal>) => {\r\n      state.productModalOpen = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../create-store.config';\r\nimport { Category } from '../Interfaces';\r\n\r\n\r\ninterface CategoryModal {\r\n  open: boolean;\r\n  editMode: boolean;\r\n  editCategory: Category;\r\n}\r\ninterface IInitialState {\r\n  categories: Category[];\r\n  categoryModalOpen: CategoryModal\r\n}\r\nconst initialState: IInitialState = {\r\n  categories: [],\r\n  categoryModalOpen: {\r\n    open: false,\r\n    editMode: false,\r\n    editCategory: {\r\n      _id: '',\r\n      name: '',\r\n    }\r\n  }\r\n};\r\nexport const categoriesSlice = createSlice({\r\n  name: 'categories',\r\n  initialState,\r\n  reducers: {\r\n    setCategoriesTo: (state, action: PayloadAction<Category[]>) => {\r\n      state.categories = action.payload;\r\n      return state;\r\n    },\r\n    setCategoryModalTo:  (state, action: PayloadAction<CategoryModal>) => {\r\n      state.categoryModalOpen = action.payload;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\n","import React from 'react';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Provider, useDispatch } from 'react-redux';\r\nimport { authSlice } from './Store/authSlice';\r\nimport logger from 'redux-logger';\r\nimport { loadersSlice } from './Store/loadersSlice';\r\nimport { controlsSlice } from './Store/controlsSlice';\r\nimport { productSlice } from './Store/productSlice';\r\nimport { categoriesSlice } from './Store/categoriesSlice';\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authSlice.reducer,\r\n    loaders: loadersSlice.reducer,\r\n    controls: controlsSlice.reducer,\r\n    products: productSlice.reducer,\r\n    categories: categoriesSlice.reducer,\r\n  },\r\n  middleware: [logger]\r\n});\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // Export a hook that can be reused to resolve types\r\n\r\nexport const ReduxStore = ({ children }: any) => (\r\n  <Provider store={store}>\r\n    {children}\r\n  </Provider>\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const DefaultForm = styled.div`\r\n  width: 600px;\r\n  margin: 10em auto;\r\n  position: relative;\r\n`;\r\nexport const DefaultFormHeaderOffset = styled.div`\r\n position: absolute;\r\n top: -55px;\r\n left: 10px;\r\n right: 10px;\r\n`;\r\n\r\nexport const DefaultFormTitle = styled.h1`\r\n  text-align: center;\r\n  font-size: 25px;\r\n  font-family: 'Balsamiq Sans', cursive;\r\n  text-transform: uppercase;\r\n  color: white;\r\n`;\r\n\r\nexport const Spacer = styled.div<{ height?: string }>`\r\n  width: 100%;\r\n  display: block;\r\n  height: ${({height}) => height || '30px'};\r\n`;\r\n\r\nexport const HeadingTitle = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-family: 'Balsamiq Sans', cursive;\r\n  text-transform: uppercase;\r\n  color: black;\r\n  margin: 1rem auto;\r\n`","import styled from 'styled-components';\r\n\r\nexport const OuterBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nexport const InnerBackground = styled.div`\r\n  background: rgba(255,255,255,0.87);\r\n  width: 100%;\r\n  height: 100%;\r\n`","import React, { FC, PropsWithChildren, useState } from 'react';\r\nimport { NavbarBrand } from './NavbarSC';\r\nimport {\r\n  MDBCollapse,\r\n  MDBDropdown,\r\n  MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle,\r\n  MDBNavbar,\r\n  MDBNavbarNav, MDBNavbarToggler,\r\n  MDBNavItem,\r\n  MDBNavLink, MDBNavbarBrand, MDBContainer,\r\n} from 'mdbreact';\r\nimport {NavLink} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { authSlice, getCurrentUser, isUserLoggedIn } from '../../Store/authSlice';\r\nimport { useAppDispatch } from '../../create-store.config';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\ntype Props = {}\r\nconst Navbar: FC<PropsWithChildren<Props>> = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { addToast } = useToasts();\r\n  const [open, setOpen] = useState(false);\r\n  const currentUser = useSelector(getCurrentUser);\r\n  const isUserLogged = useSelector(isUserLoggedIn);\r\n\r\n  return (\r\n    <header>\r\n      <MDBNavbar style={{ background: 'hsl(210, 12%, 16%)' }} dark expand=\"md\">\r\n        <MDBContainer>\r\n          <MDBNavbarBrand href=\"/\">\r\n            <strong>Gameshop</strong>\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={() => setOpen(!open)}/>\r\n          <MDBCollapse isOpen={open} navbar>\r\n            <MDBNavbarNav right>\r\n              {\r\n                isUserLogged ? <>\r\n                  <MDBNavItem>\r\n                    <MDBDropdown>\r\n                      <MDBDropdownToggle nav caret>\r\n                        <div className=\"d-none d-md-inline\">{currentUser.name}</div>\r\n                      </MDBDropdownToggle>\r\n                      <MDBDropdownMenu className=\"dropdown-default\">\r\n                        <MDBDropdownItem>\r\n                          <NavLink to={'/notimplemented'}>Profile</NavLink>\r\n                        </MDBDropdownItem>\r\n                        {currentUser.admin ? <MDBDropdownItem>\r\n                          <NavLink to={'/backoffice'}>Backoffice</NavLink>\r\n                        </MDBDropdownItem> : null}\r\n                        <MDBDropdownItem onClick={() => {\r\n                          addToast('Logout successfully', { appearance: 'success' });\r\n                          dispatch(authSlice.actions.logout());\r\n                        }}>\r\n                          <NavLink to={'/'}>Logout</NavLink>\r\n                        </MDBDropdownItem>\r\n                      </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                  </MDBNavItem>\r\n                </> : <>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/register\">Sign In</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/login\">Login</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </>\r\n              }\r\n\r\n            </MDBNavbarNav>\r\n          </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterContainer = styled.div<{footerFixedBottom?: boolean}>`\r\n  width: 100%;\r\n  height: 4rem;\r\n  background: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 1rem;\r\n  p {\r\n  margin-bottom: 10px;\r\n  }\r\n  \r\n  ${\r\n  ({ footerFixedBottom }) => footerFixedBottom ? `\r\n      position: fixed;\r\n      bottom: 0;\r\n    ` : ''\r\n}\r\n`;","import React, { FC, PropsWithChildren } from 'react';\r\nimport { FooterContainer } from './FooterSC';\r\ntype Props = {\r\n  footerFixedBottom?: boolean\r\n}\r\nconst Footer: FC<Props> = ({footerFixedBottom}) => {\r\n  return (\r\n    <FooterContainer footerFixedBottom={footerFixedBottom}>\r\n      <p>Done by joaopmendes</p>\r\n      <a href={\"https://github.com/joaopmendes/gamestore\"} target={\"_blank\"}>Github</a>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { FC, PropsWithChildren } from 'react';\r\nimport { Container } from '../../global.styles';\r\nimport { InnerBackground, OuterBackground } from './MainComponentSC';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Footer from '../Footer/Footer';\r\ntype Props = {\r\n  footerFixedBottom?: boolean\r\n}\r\nconst MainLayout: FC<PropsWithChildren<Props>> = ({children, footerFixedBottom}) => {\r\n  return (\r\n    <OuterBackground>\r\n      <Container>\r\n        <InnerBackground>\r\n          <Navbar/>\r\n          <div style={{width: \"100%\"}}>\r\n            {children}\r\n          </div>\r\n\r\n          <Footer footerFixedBottom={footerFixedBottom}/>\r\n        </InnerBackground>\r\n      </Container>\r\n    </OuterBackground>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeroContainer = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`\r\nexport const HeroImage = styled.img`\r\n  width: 100%;\r\n  height: 30rem;\r\n  background-size: cover;\r\n`\r\nexport const HeroText = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n  h1 {\r\n    font-size: 3rem;\r\n    font-family: 'Balsamiq Sans', cursive;\r\n    text-transform: uppercase;\r\n    color: white;\r\n    span {\r\n      font-size: 5rem;\r\n      color: ${props => props.theme.primary};\r\n    }\r\n  }\r\n  p {\r\n    font-size: .9rem;\r\n    margin-top: 10px;\r\n    font-family: 'Balsamiq Sans', cursive;\r\n    text-transform: uppercase;\r\n    color: white;\r\n  }\r\n`;\r\n","import React, { FC, PropsWithChildren } from 'react';\r\nimport { HeroContainer, HeroImage, HeroText } from './HeroSC';\r\nimport { NavbarBrand } from '../Navbar/NavbarSC';\r\n\r\ntype Props = {\r\n  backgroundImage: any;\r\n\r\n}\r\nconst Hero: FC<PropsWithChildren<Props>> = ({backgroundImage}) => {\r\n\r\n\r\n  return <HeroContainer>\r\n      <HeroImage src={backgroundImage} className=\"img-fluid\" alt=\"My photo\" />\r\n      <HeroText>\r\n        <h1>\r\n          <span>Game</span>Shop\r\n        </h1>\r\n        <p>\r\n          Buy any game of any console right here!\r\n        </p>\r\n      </HeroText>\r\n  </HeroContainer>\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport MainLayout from '../../Components/MainLayout/MainLayout';\r\nimport Hero from '../../Components/Hero/Hero';\r\nimport banner from '../../assets/images/banner.jpg';\r\n\r\nconst Home: React.FC<{}> = () => {\r\n  // const [response, setResponse] = useState<any>(null);\r\n  // const dispatch = useAppDispatch();\r\n  // useEffect(() => {\r\n  //   // setTimeout(() => {\r\n  //   //   dispatch(loadersSlice.actions.addLoader('testing'));\r\n  //   // }, 3000)\r\n  // }, []);\r\n  return <MainLayout footerFixedBottom={true}>\r\n    <Hero backgroundImage={banner}/>\r\n  </MainLayout>;\r\n};\r\nexport default Home;\r\n","import { ServicesOutput } from '../../Interfaces';\r\nimport { GetUserInfoResponse, LoginPayload, LoginResponse, RegisterPayload, RegisterResponse } from './interface';\r\nimport axios from 'axios';\r\nconst UserService = {\r\n  getUserInfo: async (token?:string): Promise<ServicesOutput<GetUserInfoResponse>> => {\r\n    try {\r\n      const customHeaders: {authorization?: string} = {};\r\n      if(token) {\r\n        customHeaders.authorization = `Bearer ${token}`;\r\n      }\r\n      const response = await axios.get('/api/users/profile', {\r\n        headers: customHeaders\r\n      });\r\n      return {\r\n        hasError: false,\r\n        data: response?.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to get the user information.'\r\n      };\r\n    }\r\n  },\r\n  login: async (values: LoginPayload): Promise<ServicesOutput<LoginResponse>> => {\r\n    try {\r\n      const response = await axios.post('/api/users/login', values);\r\n      return {\r\n        hasError: false,\r\n        data: response?.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to login.'\r\n      };\r\n    }\r\n  },\r\n  register: async (values: RegisterPayload): Promise<ServicesOutput<RegisterResponse>> => {\r\n    try {\r\n      const response = await axios.post('/api/users/register', values);\r\n      return {\r\n        hasError: false,\r\n        data: response?.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to login.'\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default UserService;\r\n","import React from 'react';\r\nimport UserService from '../../Services/UserService';\r\nimport MainLayout from '../../Components/MainLayout/MainLayout';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBCardBody, MDBCard, MDBIcon, MDBInput, MDBRow, MDBCardHeader } from 'mdbreact';\r\nimport { DefaultForm, DefaultFormHeaderOffset, DefaultFormTitle } from '../../global.styles';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport * as yup from 'yup';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useAppDispatch } from '../../create-store.config';\r\nimport { loadersSlice } from '../../Store/loadersSlice';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .label('Name')\r\n    .required('The field name is required'),\r\n  email: yup\r\n    .string()\r\n    .label('Email')\r\n    .email()\r\n    .required(),\r\n  password1: yup\r\n    .string()\r\n    .label('Password')\r\n    .required(),\r\n  password2: yup\r\n    .string()\r\n    .required()\r\n    .label('Confirm password')\r\n    .test('passwords-match', 'Passwords must match.', function(value) {\r\n      return this.parent.password1 === value;\r\n    }),\r\n});\r\nconst Register: React.FC<IProps> = () => {\r\n  const {addToast} = useToasts();\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  return <MainLayout footerFixedBottom={true}>\r\n    <DefaultForm>\r\n      <MDBContainer>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n            <MDBRow>\r\n              <MDBCol md=\"12\">\r\n                <DefaultFormHeaderOffset>\r\n                  <MDBCardHeader className=\"form-header blue-gradient rounded\">\r\n                    <DefaultFormTitle className=\"my-3\">\r\n                      <MDBIcon icon=\"lock\"/> Sign In:\r\n                    </DefaultFormTitle>\r\n                  </MDBCardHeader>\r\n                </DefaultFormHeaderOffset>\r\n                <div className=\"mt-5\"/>\r\n                <Formik\r\n                  initialValues={{\r\n                    email: '',\r\n                    name: '',\r\n                    password1: '',\r\n                    password2: '',\r\n                  }}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={ async (values, actions) => {\r\n                    dispatch(loadersSlice.actions.addLoader('register_loader'));\r\n                    const response = await UserService.register(values);\r\n                    dispatch(loadersSlice.actions.removeLoader('register_loader'));\r\n\r\n                    if(response.hasError) {\r\n                      addToast(response.errorMessage, {appearance: 'error'});\r\n                      return;\r\n                    }\r\n                    addToast('Registered Successfully. Please Login.', {appearance: 'success'});\r\n                    addToast('Being redirected to login page.', {appearance: 'info'});\r\n                    history.push('/login');\r\n                    actions.setSubmitting(false);\r\n                  }}\r\n                  render={() => (\r\n                    <Form>\r\n                      <Field\r\n                        name=\"name\"\r\n                        render={({ field, meta }: any) => (\r\n                          <div>\r\n                            <MDBInput {...field} label={'Name'}\r\n                              className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                              icon=\"user\" group type=\"text\" error=\"wrong\"\r\n                              success=\"right\"/>\r\n                            <p style={{color: 'red'}}>{meta.touched && meta.error && meta.error}</p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                      <Field\r\n                        name=\"email\"\r\n                        render={({ field, meta }: any) => (\r\n                          <div>\r\n                            <MDBInput {...field} label={'Email'}\r\n                              className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                              icon=\"envelope\" group type=\"text\" error=\"wrong\"\r\n                              success=\"right\"/>\r\n                            <p style={{color: 'red'}}>{meta.touched && meta.error && meta.error}</p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                      <Field\r\n                        name=\"password1\"\r\n                        render={({ field, meta }: any) => (\r\n                          <div>\r\n                            <MDBInput {...field} label={'Password'}\r\n                              className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                              icon=\"lock\" group type=\"password\" error=\"wrong\"\r\n                              success=\"right\"/>\r\n                            <p style={{color: 'red'}}>{meta.touched && meta.error && meta.error}</p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                      <Field\r\n                        name=\"password2\"\r\n                        render={({ field, meta }: any) => (\r\n                          <div>\r\n                            <MDBInput {...field} label={'Confirm Password'}\r\n                              className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                              icon=\"exclamation-triangle\" group type=\"password\" error=\"wrong\"\r\n                              success=\"right\"/>\r\n                            <p style={{color: 'red'}}>{meta.touched && meta.error && meta.error}</p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                      <div className=\"text-center\">\r\n                        <MDBBtn outline color=\"primary\" type={'submit'}>Register</MDBBtn>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n\r\n      </MDBContainer>\r\n    </DefaultForm>\r\n\r\n  </MainLayout>;\r\n};\r\nexport default Register;\r\n","import React from 'react';\r\nimport UserService from '../../Services/UserService';\r\nimport MainLayout from '../../Components/MainLayout/MainLayout';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBCardBody,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBRow,\r\n  MDBCardHeader,\r\n  MDBLink,\r\n} from 'mdbreact';\r\nimport { DefaultForm, DefaultFormHeaderOffset, DefaultFormTitle, Spacer } from '../../global.styles';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport * as yup from 'yup';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useAppDispatch } from '../../create-store.config';\r\nimport { loadersSlice } from '../../Store/loadersSlice';\r\nimport { authSlice } from '../../Store/authSlice';\r\n\r\ninterface IProps {}\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .label('Email')\r\n    .email()\r\n    .required(),\r\n  password: yup\r\n    .string()\r\n    .label('Password')\r\n    .required(),\r\n});\r\nconst Login: React.FC<IProps> = () => {\r\n  const {addToast} = useToasts();\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  return <MainLayout footerFixedBottom={true}>\r\n    <DefaultForm>\r\n      <MDBContainer>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n            <MDBRow>\r\n              <MDBCol md=\"12\">\r\n                <DefaultFormHeaderOffset>\r\n                  <MDBCardHeader className=\"form-header blue-gradient rounded\">\r\n                    <DefaultFormTitle className=\"my-3\">\r\n                      <MDBIcon icon=\"lock\"/> Login:\r\n                    </DefaultFormTitle>\r\n                  </MDBCardHeader>\r\n                </DefaultFormHeaderOffset>\r\n                <Spacer height={'50px'}/>\r\n                <Formik\r\n                  initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                  }}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={ async (values, actions) => {\r\n                    dispatch(loadersSlice.actions.addLoader('login_loader'));\r\n                    const response = await UserService.login(values);\r\n                    dispatch(loadersSlice.actions.removeLoader('login_loader'));\r\n\r\n                    if(response.hasError) {\r\n                      addToast(response.errorMessage, {appearance: 'error'});\r\n                      return;\r\n                    }\r\n                    dispatch(authSlice.actions.login(response.data.user));\r\n                    addToast('Login Successfully', {appearance: 'success'});\r\n                    addToast('Being redirected to home page.', {appearance: 'info'});\r\n                    history.push('/');\r\n                    actions.setSubmitting(false);\r\n                  }}\r\n                  render={() => (\r\n                    <Form>\r\n                      <Field\r\n                        name=\"email\"\r\n                        render={({ field, meta }: any) => (\r\n                          <div>\r\n                            <MDBInput {...field} label={'Email'}\r\n                              className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                              icon=\"envelope\" group type=\"text\" error=\"wrong\"\r\n                              success=\"right\"/>\r\n                            <p style={{color: 'red'}}>{meta.touched && meta.error && meta.error}</p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                      <Field\r\n                        name=\"password\"\r\n                        render={({ field, meta }: any) => (\r\n                          <div>\r\n                            <MDBInput {...field} label={'Password'}\r\n                              className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                              icon=\"lock\" group type=\"password\" error=\"wrong\"\r\n                              success=\"right\"/>\r\n                            <p style={{color: 'red'}}>{meta.touched && meta.error && meta.error}</p>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                      <p>\r\n                        Yet not a member? Sign In <MDBLink className={'d-inline m-0 p-0'} to={'/register'}>here</MDBLink>.\r\n                      </p>\r\n                      <div className=\"text-center\">\r\n                        <MDBBtn outline color=\"primary\" type={'submit'}>Login</MDBBtn>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n\r\n      </MDBContainer>\r\n    </DefaultForm>\r\n\r\n  </MainLayout>;\r\n};\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Home from '../Pages/Home';\r\nimport Register from '../Pages/Register/Register';\r\nimport Login from '../Pages/Login/Login';\r\nimport { isUserLoggedIn } from '../Store/authSlice';\r\n\r\nconst OnlyNotLoginRoute = ({ Component, ...rest }: any) => {\r\n  const isUserLogged = useSelector(isUserLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isUserLogged ? <Component {...props as any} /> : <Redirect to=\"/\" />}\r\n    />\r\n  );\r\n};\r\nconst OnlyLoginRoute = ({ Component, ...rest }: { Component: React.FC}) => {\r\n  const isUserLogged = useSelector(isUserLoggedIn);\r\n  if (!isUserLogged) {\r\n    return <Route {...rest} render={() => <Redirect to=\"/\" />} />;\r\n  }\r\n  return <Route {...rest} render={(props) => <Component {...props as any} />} />;\r\n};\r\nconst NormalRoutes = () => {\r\n  return (\r\n    <>\r\n      <Route path={'/'} exact render={() => <Home/>}/>\r\n      <OnlyNotLoginRoute path=\"/register\" Component={Register}/>\r\n      <OnlyNotLoginRoute path=\"/Login\" Component={Login}/>\r\n      {/* <OnlyLoginRoute path=\"/manage\" Components={RegisterPage} /> */}\r\n    </>\r\n  );\r\n};\r\nexport default NormalRoutes;\r\n","import React from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    width: 100%;\r\n    padding: 2rem;\r\n    h1 {\r\n    font-size: 1.2rem;\r\n    font-family: 'Balsamiq Sans', cursive;\r\n    text-transform: uppercase;\r\n    color: black;\r\n    text-align: center;\r\n    span {\r\n      font-size: 1.4rem;\r\n      color: ${props => props.theme.primary};\r\n    }\r\n  }\r\n`;\r\nconst SideNavigation = () => {\r\n  return (\r\n    <div className=\"sidebar-fixed position-fixed\" style={{ background: 'hsl(210, 12%, 16%)', zIndex: \"2\", height: \"100%\" }}>\r\n      <a href=\"#!\" className=\"logo-wrapper waves-effect\">\r\n        <Brand>\r\n          <h1>\r\n            <span>Game</span>store\r\n          </h1>\r\n        </Brand>\r\n      </a>\r\n      <MDBListGroup className=\"list-group-flush\">\r\n        <NavLink exact={true} to=\"/backoffice\" style={{ background: 'hsl(210, 12%, 16%)', height: \"100%\" }} activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\r\n            Dashboard\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n        <NavLink exact={true} to=\"/backoffice/categories\" style={{ background: 'hsl(210, 12%, 16%)', height: \"100%\" }} activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\r\n            Categories\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n        <NavLink exact={true} to=\"/backoffice/products\" style={{ background: 'hsl(210, 12%, 16%)', height: \"100%\" }} activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\r\n            Products\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n      </MDBListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavigation;","import React from 'react';\r\nimport SideNavigation from '../sideNavigation';\r\nimport { MDBContainer } from 'mdbreact';\r\nimport Navbar from '../../../Components/Navbar/Navbar';\r\n\r\nconst AdminLayout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <SideNavigation/>\r\n        <Navbar />\r\n      <div style={{ marginLeft: '270px', paddingTop: \"2rem\" }}>\r\n        <MDBContainer>\r\n          {children}\r\n        </MDBContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import React from 'react';\r\nimport AdminLayout from '../../Components/Layout/Layout';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <AdminLayout>\r\n      teste\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { ServicesOutput } from '../../Interfaces';\r\nimport { CreateUpdateCategory, GetCategoriesResponse, RemoveCategoriesPayload } from './interface';\r\nimport axios from 'axios';\r\nconst CategoryService = {\r\n  getCategories: async (): Promise<ServicesOutput<GetCategoriesResponse>> => {\r\n    try {\r\n      const response = await axios.get('/api/categories');\r\n      return {\r\n        hasError: false,\r\n        data: response.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to get the categories information.'\r\n      };\r\n    }\r\n  },\r\n  createUpdateCategory: async (payload: CreateUpdateCategory): Promise<ServicesOutput<GetCategoriesResponse>> => {\r\n    try {\r\n      const servicePayload: any = {\r\n        _id: payload.id,\r\n        name: payload.name\r\n      };\r\n      if(!payload.id) {\r\n        delete servicePayload._id;\r\n      }\r\n\r\n      const response = await axios.post('/api/categories', servicePayload);\r\n      return {\r\n        hasError: false,\r\n        data: response.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'Something bad happened.'\r\n      };\r\n    }\r\n  },\r\n  removeCategories: async (payload: RemoveCategoriesPayload): Promise<ServicesOutput<null>> => {\r\n    try {\r\n      await axios.post('/api/categories/delete', {ids: payload.ids});\r\n      return {\r\n        hasError: false,\r\n        data: null,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to get the categories information.'\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default CategoryService;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { MDBBtn, MDBBtnToolbar, MDBDataTableV5 } from 'mdbreact';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../create-store.config';\r\nimport CategoryService from '../../../../Services/CategoryService';\r\nimport { categoriesSlice } from '../../../../Store/categoriesSlice';\r\nimport ProductService from '../../../../Services/ProductService';\r\nimport { productSlice } from '../../../../Store/productSlice';\r\nimport { loadersSlice } from '../../../../Store/loadersSlice';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst CategoryList = () => {\r\n  const { categories } = useSelector((state: RootState) => state.categories);\r\n  const dispatch = useDispatch();\r\n  const {addToast} = useToasts();\r\n  const [datatable, setDatatable] = React.useState<any>({\r\n    columns: [\r\n      {\r\n        label: 'Id',\r\n        field: 'id',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Id',\r\n        },\r\n      },\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Options',\r\n        field: 'options',\r\n        width: 150,\r\n      },\r\n    ],\r\n    rows: [],\r\n  },\r\n  );\r\n  useEffect(() => {\r\n    setDatatable(\r\n      {\r\n        columns: [\r\n          {\r\n            label: 'Id',\r\n            field: 'id',\r\n            width: 150,\r\n            attributes: {\r\n              'aria-controls': 'DataTable',\r\n              'aria-label': 'Id',\r\n            },\r\n          },\r\n          {\r\n            label: 'Name',\r\n            field: 'name',\r\n            width: 150,\r\n            attributes: {\r\n              'aria-controls': 'DataTable',\r\n              'aria-label': 'Name',\r\n            },\r\n          },\r\n          {\r\n            label: 'Options',\r\n            field: 'options',\r\n            width: 150,\r\n          },\r\n        ],\r\n        rows: categories.map(cat => ({\r\n          name: cat.name,\r\n          id: cat._id,\r\n          options: [\r\n            <MDBBtn key={'1'} color={'danger'} onClick={ async () => {\r\n              // Remove Category\r\n              const removeCategoryResponse = await CategoryService.removeCategories({ ids: cat._id });\r\n              if(removeCategoryResponse.hasError) {\r\n                addToast(removeCategoryResponse.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('DELETE_CATEGORIES'));\r\n                return;\r\n              }\r\n              //! Fetch Products\r\n              dispatch(loadersSlice.actions.addLoader('DELETE_CATEGORIES'));\r\n              const categoriesResult = await CategoryService.getCategories();\r\n              if(categoriesResult.hasError) {\r\n                addToast(categoriesResult.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('DELETE_CATEGORIES'));\r\n                return;\r\n              }\r\n\r\n              addToast('Category Removed Successfully', { appearance: 'success' });\r\n              dispatch(loadersSlice.actions.removeLoader('DELETE_CATEGORIES'));\r\n              dispatch(categoriesSlice.actions.setCategoriesTo(categoriesResult.data.categories));\r\n            }}>Delete</MDBBtn>,\r\n            <MDBBtn key={'2'} color={'warning'} onClick={\r\n              () => {\r\n                dispatch(categoriesSlice.actions.setCategoryModalTo(\r\n                  {\r\n                    open: true,\r\n                    editMode: true,\r\n                    editCategory: {\r\n                      name: cat.name,\r\n                      _id: cat._id,\r\n                    }\r\n                  }\r\n                ));\r\n              }\r\n            }>\r\n              Edit\r\n            </MDBBtn>\r\n          ]\r\n        })),\r\n      },\r\n    );\r\n  }, [categories] );\r\n\r\n  return <>\r\n    <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} data={datatable}\r\n      fullPagination/>\r\n    <MDBBtn onClick={\r\n      () => {\r\n        dispatch(categoriesSlice.actions.setCategoryModalTo(\r\n          {\r\n            open: true,\r\n            editMode: false,\r\n            editCategory: {\r\n              name: '',\r\n              _id: '',\r\n            }\r\n          }\r\n        ));\r\n      }\r\n    }>\r\n      Create Category\r\n    </MDBBtn>\r\n  </>;\r\n};\r\n\r\nexport default CategoryList;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../create-store.config';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n} from 'mdbreact';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { categoriesSlice } from '../../../../Store/categoriesSlice';\r\nimport * as yup from 'yup';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { loadersSlice } from '../../../../Store/loadersSlice';\r\nimport CategoryService from '../../../../Services/CategoryService';\r\n\r\nconst CategoryCreateEdit = () => {\r\n  const { categoryModalOpen: { open, editCategory, editMode } } = useSelector((state: RootState) => state.categories);\r\n  const dispatch = useDispatch();\r\n  const { addToast } = useToasts();\r\n  const resetModal = () => {\r\n    dispatch(categoriesSlice.actions.setCategoryModalTo(\r\n      {\r\n        editCategory: {\r\n          _id: '',\r\n          name: '',\r\n        },\r\n        editMode: false,\r\n        open: false,\r\n      },\r\n    ));\r\n  };\r\n  const initialState = {\r\n    id: editMode ? editCategory._id : null,\r\n    name: editMode ? editCategory.name : '',\r\n  };\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .label('Name')\r\n      .required(),\r\n  });\r\n  return (\r\n    <MDBContainer>\r\n\r\n      <MDBModal isOpen={open} toggle={resetModal} inline={false} noClickableBodyWithoutBackdrop={false}\r\n        overflowScroll={false}>\r\n        <MDBModalHeader toggle={resetModal}>{editMode ? 'Edit Category' : 'Create Category'}</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <Formik\r\n            initialValues={initialState}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions) => {\r\n              dispatch(loadersSlice.actions.addLoader('CREATE_EDIT_CATEGORY_LOADER'));\r\n              const response = await CategoryService.createUpdateCategory(values);\r\n              dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_CATEGORY_LOADER'));\r\n\r\n              if(response.hasError) {\r\n                addToast(response.errorMessage, {appearance: 'error'});\r\n                dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_CATEGORY_LOADER'));\r\n                return;\r\n              }\r\n              // dispatch(authSlice.actions.login(response.data.user));\r\n              addToast('Operation done Successfully', {appearance: 'success'});\r\n              // addToast('Being redirected to home page.', {appearance: 'info'});\r\n              const categoriesResult = await CategoryService.getCategories();\r\n              if(categoriesResult.hasError) {\r\n                addToast(categoriesResult.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_CATEGORY_LOADER'));\r\n                return;\r\n              }\r\n\r\n              dispatch(categoriesSlice.actions.setCategoriesTo(categoriesResult.data.categories));\r\n              dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_CATEGORY_LOADER'));\r\n              actions.setSubmitting(false);\r\n              resetModal();\r\n            }}\r\n            render={() => (\r\n              <Form>\r\n                <Field\r\n                  name=\"name\"\r\n                  render={({ field, meta }: any) => (\r\n                    <div>\r\n                      <MDBInput {...field} label={'Name'}\r\n                        className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                        icon=\"envelope\" group type=\"text\" error=\"wrong\"\r\n                        success=\"right\"/>\r\n                      <p style={{ color: 'red' }}>{meta.touched && meta.error && meta.error}</p>\r\n                    </div>\r\n                  )}\r\n                />\r\n                <div className=\"text-center\">\r\n                  <MDBBtn outline color=\"primary\" type={'submit'}>{editMode ? \"Save\" : \"Create\"}</MDBBtn>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          />\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default CategoryCreateEdit;\r\n\r\n","import React from 'react';\r\nimport AdminLayout from '../../Components/Layout/Layout';\r\nimport CategoryList from './Components/CategoryList';\r\nimport { HeadingTitle } from '../../../global.styles';\r\nimport CategoryCreateEdit from './Components/CategoryCreateEdit';\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <AdminLayout>\r\n      <HeadingTitle>Categories List</HeadingTitle>\r\n      <CategoryList />\r\n      <CategoryCreateEdit />\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import { ServicesOutput } from '../../Interfaces';\r\nimport { CreateUpdateProduct, GetProductsResponse, RemoveProductsPayload } from './interface';\r\nimport axios from 'axios';\r\nimport { CreateUpdateCategory, GetCategoriesResponse, RemoveCategoriesPayload } from '../CategoryService/interface';\r\nconst ProductService = {\r\n  getListOfProducts: async (): Promise<ServicesOutput<GetProductsResponse>> => {\r\n    try {\r\n      const response = await axios.get('/api/products');\r\n      return {\r\n        hasError: false,\r\n        data: response?.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to get the products information.'\r\n      };\r\n    }\r\n  },\r\n  createUpdateProduct: async (payload: CreateUpdateProduct): Promise<ServicesOutput<GetProductsResponse>> => {\r\n    try {\r\n      const formData = new FormData();\r\n      if(payload.id) {\r\n        formData.append('_id', payload.id);\r\n      }\r\n      formData.append('name', payload.name);\r\n      formData.append('price', JSON.stringify(payload.price));\r\n      formData.append('categories', JSON.stringify(payload.categories));\r\n      formData.append('console', payload.console);\r\n      formData.append('productImage', payload.productImage);\r\n      const response = await axios.post('/api/products', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n      });\r\n      return {\r\n        hasError: false,\r\n        data: response.data,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'Something bad happened.'\r\n      };\r\n    }\r\n  },\r\n  removeProducts: async (payload: RemoveProductsPayload): Promise<ServicesOutput<null>> => {\r\n    try {\r\n      await axios.post('/api/products/delete', {ids: payload.ids});\r\n      return {\r\n        hasError: false,\r\n        data: null,\r\n      };\r\n    } catch (e) {\r\n      return {\r\n        hasError: true,\r\n        errorMessage: e?.response?.data?.errorMessage || 'It was not possible to delete the product.'\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default ProductService;\r\n","import React, { useEffect } from 'react';\r\nimport { MDBBtn,  MDBDataTableV5 } from 'mdbreact';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../create-store.config';\r\nimport { loadersSlice } from '../../../../Store/loadersSlice';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport ProductService from '../../../../Services/ProductService';\r\nimport { productSlice } from '../../../../Store/productSlice';\r\n\r\nconst ProductList = () => {\r\n  const { products } = useSelector((state: RootState) => state.products);\r\n  const dispatch = useDispatch();\r\n  const {addToast} = useToasts();\r\n  const [datatable, setDatatable] = React.useState<any>({\r\n    columns: [\r\n      {\r\n        label: 'Id',\r\n        field: 'id',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Id',\r\n        },\r\n      },\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Options',\r\n        field: 'options',\r\n        width: 150,\r\n      },\r\n    ],\r\n    rows: [],\r\n  },\r\n  );\r\n  useEffect(() => {\r\n    setDatatable(\r\n      {\r\n        columns: [\r\n          {\r\n            label: 'Id',\r\n            field: 'id',\r\n            width: 150,\r\n            attributes: {\r\n              'aria-controls': 'DataTable',\r\n              'aria-label': 'Id',\r\n            },\r\n          },\r\n          {\r\n            label: 'Name',\r\n            field: 'name',\r\n            width: 150,\r\n            attributes: {\r\n              'aria-controls': 'DataTable',\r\n              'aria-label': 'Name',\r\n            },\r\n          },\r\n          {\r\n            label: 'Options',\r\n            field: 'options',\r\n            width: 150,\r\n          },\r\n        ],\r\n        rows: products.map(prod => ({\r\n          name: prod.name,\r\n          id: prod._id,\r\n          options: [\r\n            <MDBBtn key={'1'} color={'danger'} onClick={ async () => {\r\n              // Remove Category\r\n              dispatch(loadersSlice.actions.addLoader('DELETE_PROD'));\r\n              const removeProdResponse = await ProductService.removeProducts({ ids: prod._id });\r\n              if(removeProdResponse.hasError) {\r\n                addToast(removeProdResponse.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('DELETE_PROD'));\r\n                return;\r\n              }\r\n              //! Fetch Products\r\n              const categoriesResult = await ProductService.getListOfProducts();\r\n              if(categoriesResult.hasError) {\r\n                addToast(categoriesResult.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('DELETE_PROD'));\r\n                return;\r\n              }\r\n\r\n              addToast('Product Removed Successfully', { appearance: 'success' });\r\n              dispatch(loadersSlice.actions.removeLoader('DELETE_PROD'));\r\n              dispatch(productSlice.actions.setProductsTo(categoriesResult.data.products));\r\n            }}>Delete</MDBBtn>,\r\n            <MDBBtn key={'2'} color={'warning'} onClick={\r\n              () => {\r\n                dispatch(productSlice.actions.setProductModalTo(\r\n                  {\r\n                    open: true,\r\n                    editMode: true,\r\n                    editProduct: {\r\n                      _id: prod._id,\r\n                      name: prod.name,\r\n                      categories: prod.categories,\r\n                      price: prod.price,\r\n                      console: prod.console,\r\n                      productImage: prod.productImage\r\n\r\n                    }\r\n                  }\r\n                ));\r\n              }\r\n            }>\r\n              Edit\r\n            </MDBBtn>\r\n          ]\r\n        })),\r\n      },\r\n    );\r\n  }, [products] );\r\n\r\n  return <>\r\n    <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} data={datatable}\r\n      fullPagination/>\r\n    <MDBBtn onClick={\r\n      () => {\r\n        dispatch(productSlice.actions.setProductModalTo(\r\n          {\r\n            open: true,\r\n            editMode: false,\r\n            editProduct: {\r\n              _id: '',\r\n              categories: [],\r\n              name: '',\r\n              price: 0,\r\n              console: '',\r\n              productImage: ''\r\n            }\r\n          }\r\n        ));\r\n      }\r\n    }>\r\n      Create Category\r\n    </MDBBtn>\r\n  </>;\r\n};\r\n\r\nexport default ProductList;\r\n","import { FieldProps } from 'formik';\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport const SelectField: React.FC<any> = (props) => {\r\n  const {field, form, options} = props;\r\n  return (\r\n    <>\r\n      <label htmlFor={field.name}>Categories</label>\r\n      <Select\r\n        id={field.name}\r\n        options={options}\r\n        name={field.name}\r\n        value={field.value}\r\n        isMulti\r\n        onChange={(option: any) => form.setFieldValue(field.name, option, true)}\r\n        onBlur={() => {\r\n          form.setFieldTouched(field.name)\r\n        }}\r\n      />\r\n      <p style={{ color: 'red' }}>{form.touched.categories && form.errors.categories && form.errors.categories}</p>\r\n\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../create-store.config';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n} from 'mdbreact';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport * as yup from 'yup';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { productSlice } from '../../../../Store/productSlice';\r\nimport { SelectField } from '../../../Components/SelectField';\r\nimport { loadersSlice } from '../../../../Store/loadersSlice';\r\nimport ProductService from '../../../../Services/ProductService';\r\nimport { CreateUpdateProduct } from '../../../../Services/ProductService/interface';\r\n\r\nconst ProductCreateEdit = () => {\r\n  const { productModalOpen: { open, editProduct, editMode } } = useSelector((state: RootState) => state.products);\r\n  const categories = useSelector((store: RootState) => store.categories.categories);\r\n  const categoriesOptions = categories?.map(cat => ({\r\n    label: cat.name,\r\n    value: cat._id,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const { addToast } = useToasts();\r\n  const resetModal = () => {\r\n    dispatch(productSlice.actions.setProductModalTo(\r\n      {\r\n        editProduct: {\r\n          _id: '',\r\n          categories: [],\r\n          name: '',\r\n          price: 0,\r\n          console: '',\r\n          productImage: '',\r\n        },\r\n        editMode: false,\r\n        open: false,\r\n      },\r\n    ));\r\n  };\r\n  const initialState = {\r\n    id: editMode ? editProduct._id : null,\r\n    name: editMode ? editProduct.name : '',\r\n    categories: editMode ? editProduct.categories.map(cat => ({ label: cat.name, value: cat._id })) : [],\r\n    price: editMode ? editProduct.price : 0,\r\n    console: editMode ? editProduct.console : '',\r\n    productImage: '',\r\n\r\n  };\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .label('Name')\r\n      .required(),\r\n    console: yup\r\n      .string()\r\n      .label('Platform')\r\n      .oneOf(['PS4', 'XBOX', 'PC'])\r\n      .required(),\r\n    price: yup.number()\r\n      .label('Price')\r\n      .min(30)\r\n      .required(),\r\n    categories: yup.array().min(1),\r\n  });\r\n  return (\r\n    <MDBContainer>\r\n      <MDBModal isOpen={open} toggle={resetModal} inline={false} noClickableBodyWithoutBackdrop={false}\r\n        overflowScroll={false}>\r\n        <MDBModalHeader toggle={resetModal}>{editMode ? 'Edit Product' : 'Create Product'}</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <Formik\r\n            initialValues={initialState}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions) => {\r\n              console.log(values);\r\n              dispatch(loadersSlice.actions.addLoader('CREATE_EDIT_PRODUCT_LOADER'));\r\n\r\n              const servicePayload: CreateUpdateProduct = {\r\n                ...values,\r\n                categories: values.categories.reduce((acc: string[], curr: any) => {\r\n                  acc.push(curr.value);\r\n                  return acc;\r\n                }, [] as string[]),\r\n              };\r\n              const response = await ProductService.createUpdateProduct(servicePayload);\r\n              dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_PRODUCT_LOADER'));\r\n\r\n              if (response.hasError) {\r\n                addToast(response.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_PRODUCT_LOADER'));\r\n                return;\r\n              }\r\n              addToast('Operation done Successfully', { appearance: 'success' });\r\n              // addToast('Being redirected to home page.', {appearance: 'info'});\r\n              const productResult = await ProductService.getListOfProducts();\r\n              if (productResult.hasError) {\r\n                addToast(productResult.errorMessage, { appearance: 'error' });\r\n                dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_PRODUCT_LOADER'));\r\n                return;\r\n              }\r\n\r\n              dispatch(productSlice.actions.setProductsTo(productResult.data.products));\r\n              dispatch(loadersSlice.actions.removeLoader('CREATE_EDIT_PRODUCT_LOADER'));\r\n              actions.setSubmitting(false);\r\n              resetModal();\r\n            }}\r\n            render={() => (\r\n              <Form>\r\n                <Field\r\n                  name=\"name\"\r\n                  render={({ field, meta }: any) => (\r\n                    <>\r\n                      <div>\r\n                        <MDBInput {...field} label={'Name'}\r\n                          className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                          icon=\"envelope\" group type=\"text\" error=\"wrong\"\r\n                          success=\"right\"/>\r\n                        <p style={{ color: 'red' }}>{meta.touched && meta.error && meta.error}</p>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"price\"\r\n                  render={({ field, meta }: any) => (\r\n                    <>\r\n                      <div>\r\n                        <MDBInput {...field} label={'Price'}\r\n                          className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                          icon=\"envelope\" group type=\"number\" error=\"wrong\"\r\n                          success=\"right\"/>\r\n                        <p style={{ color: 'red' }}>{meta.touched && meta.error && meta.error}</p>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                />\r\n                <Field\r\n                  name=\"console\"\r\n                  render={({ field, meta }: any) => (\r\n                    <>\r\n                      <div>\r\n                        <MDBInput {...field} label={'Platform'}\r\n                          className={meta.touched ? meta.error ? 'is-invalid' : 'is-valid' : ''}\r\n                          icon=\"envelope\" group type=\"text\" error=\"wrong\"\r\n                          success=\"right\"/>\r\n                        <p style={{ color: 'red' }}>{meta.touched && meta.error && meta.error}</p>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Field id={'categories'} name={'categories'} component={SelectField} options={categoriesOptions}/>\r\n                <Field\r\n                  name=\"productImage\"\r\n                  render={({ field, meta, form }: any) => {\r\n                    console.log('form',form);\r\n                    console.log('field', field);\r\n\r\n                    return (\r\n                      <>\r\n                        <label style={{ margin: '1rem 0' }}>Product Image</label>\r\n                        <div className=\"input-group\">\r\n                          <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n                            Upload\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"custom-file\">\r\n                            <input\r\n                              type=\"file\"\r\n                              className=\"custom-file-input\"\r\n                              id=\"inputGroupFile01\"\r\n                              aria-describedby=\"inputGroupFileAddon01\"\r\n                              onChange={(e) => {\r\n                                form.setFieldValue('productImage', e?.target?.files?.[0] || '');\r\n                              }}\r\n                            />\r\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                              {field.value.name || 'Choose a file'}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  }}\r\n                />\r\n                <div className=\"text-center\">\r\n                  <MDBBtn outline color=\"primary\" type={'submit'}>{editMode ? 'Save' : 'Create'}</MDBBtn>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          />\r\n        </MDBModalBody>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default ProductCreateEdit;\r\n\r\n","import React from 'react';\r\nimport AdminLayout from '../../Components/Layout/Layout';\r\nimport ProductList from './Components/ProductList';\r\nimport { HeadingTitle } from '../../../global.styles';\r\nimport ProductCreateEdit from './Components/ProductCreateEdit';\r\n\r\nconst Products = () => {\r\n  return (\r\n    <AdminLayout>\r\n      <HeadingTitle>Products List</HeadingTitle>\r\n      <ProductList />\r\n      <ProductCreateEdit />\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { isUserAdmin } from '../Store/authSlice';\r\nimport Dashboard from '../Backoffice/Pages/Dashboard/Dashboard';\r\nimport Categories from '../Backoffice/Pages/Categories/Categories';\r\nimport { RootState } from '../create-store.config';\r\nimport Products from '../Backoffice/Pages/Products/Products';\r\n\r\nconst AdminRoute = ({ Component, ...rest }: any) => {\r\n  const admin = useSelector((state: RootState) => state.auth.user.admin);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        admin ? <Component {...props as any} /> : <Redirect to=\"/\" />}\r\n    />\r\n  );\r\n};\r\nconst AdminRoutes = () => {\r\n  return (\r\n    <>\r\n      {/*<AdminRoute path=\"/admin/dashboard\" Components={DashboardPage} />*/}\r\n      <AdminRoute path={'/backoffice'} exact Component={Dashboard} />\r\n      <AdminRoute path={'/backoffice/categories'} Component={Categories} />\r\n      <AdminRoute path={'/backoffice/products'} Component={Products} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport NormalRoutes from './routes/normal.routes';\r\nimport AdminRoutes from './routes/admin.routes';\r\n\r\nconst Routes = () => (\r\n  <>\r\n    <NormalRoutes/>\r\n    <AdminRoutes/>\r\n  </>\r\n);\r\nexport const RouterConfig = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Routes/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n","import { ThemeProvider } from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst theme = {\r\n  primary: \"#ff4d23\",\r\n  secundary: \"#ffefec\",\r\n};\r\nexport const StyledTheme = ({ children }) => (\r\n  <>\r\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n  </>\r\n);\r\n","import React, { FC, PropsWithChildren } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAnyloaderActive } from '../../Store/loadersSlice';\r\nimport styled from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\n\r\ntype Props = {}\r\nconst FullPageLoader: FC<PropsWithChildren<Props>> = ({ children }) => {\r\n  const isLoading = useSelector(isAnyloaderActive);\r\n\r\n  return <>\r\n    {isLoading && (\r\n      <FullPageOverLoad>\r\n        <Loader\r\n          type=\"Oval\"\r\n          color=\"#ff4d23\"\r\n          height={150}\r\n          width={150}\r\n        />\r\n      </FullPageOverLoad>\r\n    )}\r\n    {children}\r\n  </>;\r\n};\r\nconst FullPageOverLoad = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgb(255,255,255, 0.5);\r\n  z-index: 9999;\r\n  transition: all 1s ease-in;\r\n`;\r\nexport default FullPageLoader;\r\n","import React, { FC, PropsWithChildren, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { authSlice, getUserToken } from './Store/authSlice';\r\nimport { useAppDispatch } from './create-store.config';\r\nimport { loadersSlice } from './Store/loadersSlice';\r\nimport UserService from './Services/UserService';\r\nimport jwtDecode from 'jwt-decode';\r\nimport CategoryService from './Services/CategoryService';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { categoriesSlice } from './Store/categoriesSlice';\r\nimport ProductService from './Services/ProductService';\r\nimport { productSlice } from './Store/productSlice';\r\n\r\n\r\nexport const AppInitializator: FC<PropsWithChildren<null>> = ({children}) => {\r\n  const userToken = useSelector(getUserToken);\r\n  const dispatch = useAppDispatch();\r\n  const {addToast} = useToasts();\r\n  useEffect(() => {\r\n    axios.interceptors.request.use((config) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      if (userToken && !config.headers.authorization) {\r\n        config.headers.authorization = `Bearer ` + userToken;\r\n      }\r\n      return config;\r\n    }, (error) => Promise.reject(error));\r\n    //eslint-disable-next-line\r\n  },[userToken]);\r\n\r\n  //! If user already has a token, fetch the user data\r\n  useEffect(() => {\r\n    (async () => {\r\n      //! Deal with storage token\r\n      dispatch(loadersSlice.actions.addLoader('APP_INITIALIZATOR'));\r\n\r\n      const token = localStorage.getItem('token');\r\n      if(token && !userToken) {\r\n        if ((jwtDecode(token) as any)?.exp < Date.now() / 1000) {\r\n          localStorage.removeItem('token');\r\n          return;\r\n        }\r\n        const response = await UserService.getUserInfo(token);\r\n        if(response.hasError) {\r\n          localStorage.removeItem('token');\r\n          dispatch(loadersSlice.actions.removeLoader('APP_INITIALIZATOR'));\r\n\r\n          return;\r\n        }\r\n        dispatch(authSlice.actions.login(response.data.user));\r\n      }\r\n\r\n      //! Fetch Products\r\n      const categoriesResult = await CategoryService.getCategories();\r\n      if(categoriesResult.hasError) {\r\n        handleError();\r\n        return;\r\n      }\r\n      dispatch(categoriesSlice.actions.setCategoriesTo(categoriesResult.data.categories));\r\n      //! Fetch Products\r\n      const productResult = await ProductService.getListOfProducts();\r\n      if(productResult.hasError) {\r\n        handleError();\r\n        return;\r\n      }\r\n      dispatch(productSlice.actions.setProductsTo(productResult.data.products));\r\n\r\n\r\n      dispatch(loadersSlice.actions.removeLoader('APP_INITIALIZATOR'));\r\n\r\n    })();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  const handleError = () => {\r\n    dispatch(loadersSlice.actions.removeLoader('APP_INITIALIZATOR'));\r\n    addToast('Something went wrong trying to load the page, please refresh.', {appearance: 'error'});\r\n  };\r\n  return (\r\n    <>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport { ReduxStore } from './create-store.config';\r\nimport { RouterConfig } from './create-router.config';\r\nimport { StyledTheme } from './create-theme.style';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './global.css';\r\nimport FullPageLoader from './Components/FullPageLoader/FullPageLoader';\r\nimport { AppInitializator } from './create-app-initializator.config';\r\n\r\n\r\nconst App = () => (\r\n  <StyledTheme>\r\n    <ReduxStore>\r\n      <ToastProvider placement={\"top-right\"} style={{zIndex: 200}} autoDismiss autoDismissTimeout={6000}>\r\n        <FullPageLoader>\r\n          <AppInitializator>\r\n            <RouterConfig />\r\n          </AppInitializator>\r\n        </FullPageLoader>\r\n      </ToastProvider>\r\n    </ReduxStore>\r\n  </StyledTheme>\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}